@inject IJSRuntime JS;
@using System.Text;

<canvas id="@Id"></canvas>


@code {
    [Parameter]
    public string Id { get; set; } = "myChart";

    [Parameter]
    public IEnumerable<ChartItem>? ItemsSource{ get; set; }

    private IEnumerable<ChartItem>? _itemsSourceCore;
    private IEnumerable<ChartItem>? ItemsCourceCore
    {
        get => this._itemsSourceCore;
        set
        {
            if(this._itemsSourceCore != value)
            {
                this._itemsSourceCore = value;
                UpdateChart();
            }
        }
    }

    protected override void OnParametersSet()
    {
        this.ItemsCourceCore = this.ItemsSource;
    }

    private void UpdateChart()
    {
        var jsonBuilder = new StringBuilder();
        jsonBuilder.AppendLine("{");
        jsonBuilder.AppendLine("  \"type\": \"bar\",");
        jsonBuilder.AppendLine("  \"data\": {");
        jsonBuilder.AppendLine("    \"labels\": [");
        jsonBuilder.AppendLine("       \"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"");
        jsonBuilder.AppendLine("    ],");
        jsonBuilder.AppendLine("    \"datasets\":[");
        jsonBuilder.AppendLine("{");
        jsonBuilder.AppendLine("\"label\": \"# of Votes\",");
        jsonBuilder.AppendLine("\"data\": [12, 19, 3, 5, 2, 3],");
        jsonBuilder.AppendLine



        jsonBuilder.AppendLine("  },");
        jsonBuilder.AppendLine("  \"options\": {");

        jsonBuilder.AppendLine("    \"scales\": { \"xAxes\": [{\"type\": \"linear\", \"position\": \"bottom\", \"ticks\": {\"min\": 0, \"max\": 1000} }], \"yAxes\": [{\"ticks\": {\"min\": -2, \"max\": 2}}] }");

        jsonBuilder.AppendLine("  }");
        jsonBuilder.AppendLine("}");
        var json = jsonBuilder.ToString();


        var json = JSON.stringify({
                    "type": "bar",
                    "data": {
                        "labels": ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
                        "datasets": [
                            {
                                "label": "# of Votes",
                                "data": [12, 19, 3, 5, 2, 3],
                                "backgroundColor": [
                                    "rgba(255, 99, 132, 0.2)",
                                    "rgba(54, 162, 235, 0.2)",
                                    "rgba(255, 206, 86, 0.2)",
                                    "rgba(75, 192, 192, 0.2)",
                                    "rgba(153, 102, 255, 0.2)",
                                    "rgba(255, 159, 64, 0.2)"
                                ],
                                "borderColor": [
                                    "rgba(255, 99, 132, 1)",
                                    "rgba(54, 162, 235, 1)",
                                    "rgba(255, 206, 86, 1)",
                                    "rgba(75, 192, 192, 1)",
                                    "rgba(153, 102, 255, 1)",
                                    "rgba(255, 159, 64, 1)"
                                ],
                                "borderWidth": 1
                            }
                        ]
                    },
                    "options": {
                        "scales": {
                            "yAxes": [
                                {
                                    "ticks": {
                                        "beginAtZero": true
                                    }
                                }
                            ]
                        }
                    }
                });
        JS.InvokeVoidAsync("renderChart", this.Id, json);
    }
}
