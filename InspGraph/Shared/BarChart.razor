@inject IJSRuntime JS;
@using System.Text;

<canvas id="@Id"></canvas>


@code {
    [Parameter]
    public string Id { get; set; } = "myChart";

    [Parameter]
    public IEnumerable<BarChartItem>? ItemsSource { get; set; }

    private IEnumerable<BarChartItem>? _itemsSourceCore;
    private IEnumerable<BarChartItem>? ItemsCourceCore
    {
        get => this._itemsSourceCore;
        set
        {
            if (this._itemsSourceCore != value)
            {
                this._itemsSourceCore = value;
                UpdateChart();
            }
        }
    }

    protected override void OnParametersSet()
    {
        this.ItemsCourceCore = this.ItemsSource;
    }

    private void UpdateChart()
    {
        var jsonBuilder = new StringBuilder();
        jsonBuilder.AppendLine("{");
        jsonBuilder.AppendLine("\"type\": \"bar\",");
        jsonBuilder.AppendLine("\"data\": {");
        jsonBuilder.AppendLine("\"labels\": [");
        jsonBuilder.AppendLine("\"8/9\", \"8/10\", \"8/11\", \"8/12\", \"8/13\"");
        jsonBuilder.AppendLine("],");
        jsonBuilder.AppendLine("\"datasets\":[");
        //jsonBuilder.AppendLine("       " + string.Join(", \r\n       ", this.ItemsSource.Select(x => x.ToString())));

        jsonBuilder.AppendLine("{");
        jsonBuilder.AppendLine("\"label\": \"OK数\",");
        jsonBuilder.AppendLine("\"data\": [12, 19, 3, 5, 2, 3],");
        jsonBuilder.AppendLine("\"backgroundColor\": ");
        jsonBuilder.AppendLine("\"rgba(255, 99, 132, 0.2)\",");
        jsonBuilder.AppendLine("\"borderColor\": ");
        jsonBuilder.AppendLine("\"rgba(255, 50, 132, 0.2)\",");
        jsonBuilder.AppendLine("\"borderWidth\": 1");
        jsonBuilder.AppendLine("},");
        jsonBuilder.AppendLine("{");
        jsonBuilder.AppendLine("\"label\": \"NG数\",");
        jsonBuilder.AppendLine("\"data\": [3, 3, 2, 1, 2],");
        jsonBuilder.AppendLine("\"backgroundColor\": ");
        jsonBuilder.AppendLine("\"rgba(5, 99, 200, 0.2)\",");
        jsonBuilder.AppendLine("\"borderColor\": ");
        jsonBuilder.AppendLine("\"rgba(5, 50, 180, 0.2)\",");
        jsonBuilder.AppendLine("\"borderWidth\": 1");
        jsonBuilder.AppendLine("}");

        jsonBuilder.AppendLine("]");
        jsonBuilder.AppendLine("},");
        jsonBuilder.AppendLine("\"options\": {\"scales\": {\"yAxes\": [{\"ticks\": {\"beginAtZero\": true}}]}}}");

        var json = jsonBuilder.ToString();

        JS.InvokeVoidAsync("renderChart", this.Id, json);
    }
}
